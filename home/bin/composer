#!/bin/sh
#
# Substitutes `composer` binary for one executed inside a Docker container.
#
# Author: Augusto Pascutti <augusto.hp@gmail.com>

# Configuration
PHP_COMPOSER_IMAGE=${PHP_COMPOSER_IMAGE:-"composer"}
PHP_COMPOSER_VERSION=${PHP_COMPOSER_VERSION:-"latest"}
COMPOSER_HOME=${COMPOSER_HOME:-"${HOME}/.composer"}

# Dependencies
DOCKER=$(which docker 2> /dev/null)
ID=$(which id)

# Sanity checks
test -z "$DOCKER" && { echo "Error: Docker not installed." >&2; exit 2; }
test -z "$ID" && { echo "Error: 'id' command not available." >&2; exit 2; }
test -d "${COMPOSER_HOME}" || { mkdir -p "${COMPOSER_HOME}"; }

# -----------------------------------------------------------------------------
test ! -z "$DEBUG" && { set -x; }

composer_command=${1:-}
composer_params=
current_user=$($ID -u)
current_group=$($ID -g)
docker_args=
shift

# Avoids checking requirements (container is checked rather than host)
if [ "${composer_command}" = "install" ] || [ "${composer_command}" = "update" ]
then
	composer_params="--ignore-platform-reqs --no-scripts"
fi

# SSH support, to use with private repositories
if [ "$(uname)" = "Linux" ]
then
	docker_args="--volume $SSH_AUTH_SOCK:/ssh-auth.sock --env SSH_AUTH_SOCK=/ssh-auth.sock $docker_args"
fi

tty -s && { docker_args="--tty ${docker_args}"; }

# shellcheck disable=SC2086,SC2068
docker run --rm \
	--interactive \
	${docker_args} \
	--user "${current_user}:${current_group}" \
	--volume "${PWD}:/app" \
	--volume "${COMPOSER_HOME}:/tmp" \
	--volume /etc/passwd:/etc/passwd:ro \
	--volume /etc/group:/etc/group:ro \
	"${PHP_COMPOSER_IMAGE}:${PHP_COMPOSER_VERSION}" \
	"${composer_command}" \
	${composer_params} \
	$@

